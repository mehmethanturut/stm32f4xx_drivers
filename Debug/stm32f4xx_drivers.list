
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008ec  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000a80  08000a80  00001a80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000a8c  08000a8c  00001a9c  2**0
                  CONTENTS
  4 .ARM          00000008  08000a8c  08000a8c  00001a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08000a94  08000a9c  00001a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a94  08000a94  00001a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a98  08000a98  00001a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a9c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a9c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001a9c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006133  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000523  00000000  00000000  00007bff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000100  00000000  00000000  00008128  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000b3  00000000  00000000  00008228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00001128  00000000  00000000  000082db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    00001388  00000000  00000000  00009403  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  0000a78b  2**0
                  CONTENTS, READONLY
 19 .debug_frame  0000031c  00000000  00000000  0000a7d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000068  00000000  00000000  0000aaec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000a68 	.word	0x08000a68

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000a68 	.word	0x08000a68

080001d4 <strlen>:
 80001d4:	4603      	mov	r3, r0
 80001d6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001da:	2a00      	cmp	r2, #0
 80001dc:	d1fb      	bne.n	80001d6 <strlen+0x2>
 80001de:	1a18      	subs	r0, r3, r0
 80001e0:	3801      	subs	r0, #1
 80001e2:	4770      	bx	lr

080001e4 <GPIO_PeriClkCtrl>:
 * @return            -  none
 *
 * @Note              -  none

 *********************************************************************************************/
void GPIO_PeriClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80001e4:	b480      	push	{r7}
 80001e6:	b083      	sub	sp, #12
 80001e8:	af00      	add	r7, sp, #0
 80001ea:	6078      	str	r0, [r7, #4]
 80001ec:	460b      	mov	r3, r1
 80001ee:	70fb      	strb	r3, [r7, #3]
    if(EnorDi){
 80001f0:	78fb      	ldrb	r3, [r7, #3]
 80001f2:	2b00      	cmp	r3, #0
 80001f4:	d047      	beq.n	8000286 <GPIO_PeriClkCtrl+0xa2>
        if (pGPIOx==GPIOA)
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	4a49      	ldr	r2, [pc, #292]	@ (8000320 <GPIO_PeriClkCtrl+0x13c>)
 80001fa:	4293      	cmp	r3, r2
 80001fc:	d107      	bne.n	800020e <GPIO_PeriClkCtrl+0x2a>
        {
            GPIOA_PCLK_EN();
 80001fe:	4a49      	ldr	r2, [pc, #292]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000200:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 8000204:	f043 0301 	orr.w	r3, r3, #1
 8000208:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
        else if (pGPIOx==GPIOH)
        {
            GPIOH_PCLK_DI();
        }
    }
}
 800020c:	e082      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOB)
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	4a45      	ldr	r2, [pc, #276]	@ (8000328 <GPIO_PeriClkCtrl+0x144>)
 8000212:	4293      	cmp	r3, r2
 8000214:	d107      	bne.n	8000226 <GPIO_PeriClkCtrl+0x42>
            GPIOB_PCLK_EN();
 8000216:	4a43      	ldr	r2, [pc, #268]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000218:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 800021c:	f043 0302 	orr.w	r3, r3, #2
 8000220:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 8000224:	e076      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a40      	ldr	r2, [pc, #256]	@ (800032c <GPIO_PeriClkCtrl+0x148>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d107      	bne.n	800023e <GPIO_PeriClkCtrl+0x5a>
            GPIOC_PCLK_EN();
 800022e:	4a3d      	ldr	r2, [pc, #244]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000230:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 800023c:	e06a      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOD)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a3b      	ldr	r2, [pc, #236]	@ (8000330 <GPIO_PeriClkCtrl+0x14c>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d107      	bne.n	8000256 <GPIO_PeriClkCtrl+0x72>
            GPIOD_PCLK_EN();
 8000246:	4a37      	ldr	r2, [pc, #220]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000248:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 800024c:	f043 0308 	orr.w	r3, r3, #8
 8000250:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 8000254:	e05e      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOE)
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	4a36      	ldr	r2, [pc, #216]	@ (8000334 <GPIO_PeriClkCtrl+0x150>)
 800025a:	4293      	cmp	r3, r2
 800025c:	d107      	bne.n	800026e <GPIO_PeriClkCtrl+0x8a>
            GPIOE_PCLK_EN();
 800025e:	4a31      	ldr	r2, [pc, #196]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000260:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 8000264:	f043 0310 	orr.w	r3, r3, #16
 8000268:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 800026c:	e052      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOH)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a31      	ldr	r2, [pc, #196]	@ (8000338 <GPIO_PeriClkCtrl+0x154>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d14e      	bne.n	8000314 <GPIO_PeriClkCtrl+0x130>
            GPIOH_PCLK_EN();
 8000276:	4a2b      	ldr	r2, [pc, #172]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000278:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 800027c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000280:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 8000284:	e046      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        if (pGPIOx==GPIOA)
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	4a25      	ldr	r2, [pc, #148]	@ (8000320 <GPIO_PeriClkCtrl+0x13c>)
 800028a:	4293      	cmp	r3, r2
 800028c:	d107      	bne.n	800029e <GPIO_PeriClkCtrl+0xba>
            GPIOA_PCLK_DI();
 800028e:	4a25      	ldr	r2, [pc, #148]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000290:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 8000294:	f36f 0300 	bfc	r3, #0, #1
 8000298:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 800029c:	e03a      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOB)
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	4a21      	ldr	r2, [pc, #132]	@ (8000328 <GPIO_PeriClkCtrl+0x144>)
 80002a2:	4293      	cmp	r3, r2
 80002a4:	d107      	bne.n	80002b6 <GPIO_PeriClkCtrl+0xd2>
            GPIOB_PCLK_DI();
 80002a6:	4a1f      	ldr	r2, [pc, #124]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 80002a8:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 80002ac:	f36f 0341 	bfc	r3, #1, #1
 80002b0:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 80002b4:	e02e      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOC)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a1c      	ldr	r2, [pc, #112]	@ (800032c <GPIO_PeriClkCtrl+0x148>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d107      	bne.n	80002ce <GPIO_PeriClkCtrl+0xea>
            GPIOC_PCLK_DI();
 80002be:	4a19      	ldr	r2, [pc, #100]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 80002c0:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 80002c4:	f36f 0382 	bfc	r3, #2, #1
 80002c8:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 80002cc:	e022      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOD)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a17      	ldr	r2, [pc, #92]	@ (8000330 <GPIO_PeriClkCtrl+0x14c>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d107      	bne.n	80002e6 <GPIO_PeriClkCtrl+0x102>
            GPIOD_PCLK_DI();
 80002d6:	4a13      	ldr	r2, [pc, #76]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 80002d8:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 80002dc:	f36f 03c3 	bfc	r3, #3, #1
 80002e0:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 80002e4:	e016      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOE)
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a12      	ldr	r2, [pc, #72]	@ (8000334 <GPIO_PeriClkCtrl+0x150>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d107      	bne.n	80002fe <GPIO_PeriClkCtrl+0x11a>
            GPIOE_PCLK_DI();
 80002ee:	4a0d      	ldr	r2, [pc, #52]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 80002f0:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 80002f4:	f36f 1304 	bfc	r3, #4, #1
 80002f8:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 80002fc:	e00a      	b.n	8000314 <GPIO_PeriClkCtrl+0x130>
        else if (pGPIOx==GPIOH)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a0d      	ldr	r2, [pc, #52]	@ (8000338 <GPIO_PeriClkCtrl+0x154>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClkCtrl+0x130>
            GPIOH_PCLK_DI();
 8000306:	4a07      	ldr	r2, [pc, #28]	@ (8000324 <GPIO_PeriClkCtrl+0x140>)
 8000308:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 800030c:	f36f 13c7 	bfc	r3, #7, #1
 8000310:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
}
 8000314:	bf00      	nop
 8000316:	370c      	adds	r7, #12
 8000318:	46bd      	mov	sp, r7
 800031a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031e:	4770      	bx	lr
 8000320:	40020000 	.word	0x40020000
 8000324:	40023800 	.word	0x40023800
 8000328:	40020400 	.word	0x40020400
 800032c:	40020800 	.word	0x40020800
 8000330:	40020c00 	.word	0x40020c00
 8000334:	40021000 	.word	0x40021000
 8000338:	40021c00 	.word	0x40021c00

0800033c <GPIO_Init>:
 * @return            -  none
 *
 * @Note              -  none

 *********************************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 800033c:	b580      	push	{r7, lr}
 800033e:	b088      	sub	sp, #32
 8000340:	af00      	add	r7, sp, #0
 8000342:	6078      	str	r0, [r7, #4]

    GPIO_PeriClkCtrl(pGPIOHandle->pGPIOx,ENABLE);
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	2101      	movs	r1, #1
 800034a:	4618      	mov	r0, r3
 800034c:	f7ff ff4a 	bl	80001e4 <GPIO_PeriClkCtrl>

    uint32_t *pTemp;
    //1. configure mode 
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG){
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	795b      	ldrb	r3, [r3, #5]
 8000354:	2b03      	cmp	r3, #3
 8000356:	d81c      	bhi.n	8000392 <GPIO_Init+0x56>
        //non interrupt mode
        pTemp =(uint32_t*)&(pGPIOHandle->pGPIOx->GPIOx_MODER_t);
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	60bb      	str	r3, [r7, #8]
        *pTemp &=   ~((3)<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800035e:	68bb      	ldr	r3, [r7, #8]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	687a      	ldr	r2, [r7, #4]
 8000364:	7912      	ldrb	r2, [r2, #4]
 8000366:	0052      	lsls	r2, r2, #1
 8000368:	2103      	movs	r1, #3
 800036a:	fa01 f202 	lsl.w	r2, r1, r2
 800036e:	43d2      	mvns	r2, r2
 8000370:	401a      	ands	r2, r3
 8000372:	68bb      	ldr	r3, [r7, #8]
 8000374:	601a      	str	r2, [r3, #0]
        *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000376:	68bb      	ldr	r3, [r7, #8]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	7952      	ldrb	r2, [r2, #5]
 800037e:	4611      	mov	r1, r2
 8000380:	687a      	ldr	r2, [r7, #4]
 8000382:	7912      	ldrb	r2, [r2, #4]
 8000384:	0052      	lsls	r2, r2, #1
 8000386:	fa01 f202 	lsl.w	r2, r1, r2
 800038a:	431a      	orrs	r2, r3
 800038c:	68bb      	ldr	r3, [r7, #8]
 800038e:	601a      	str	r2, [r3, #0]
 8000390:	e0a8      	b.n	80004e4 <GPIO_Init+0x1a8>
    }
    else{
        uint32_t *pTemp1;
        uint32_t *pTemp2;
        uint32_t *ptemp3;
        if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT){
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	795b      	ldrb	r3, [r3, #5]
 8000396:	2b04      	cmp	r3, #4
 8000398:	d119      	bne.n	80003ce <GPIO_Init+0x92>
            //1. configure FTSR
            pTemp1 =(uint32_t*) &(EXTI->EXTI_FTSR_t);
 800039a:	4b90      	ldr	r3, [pc, #576]	@ (80005dc <GPIO_Init+0x2a0>)
 800039c:	61fb      	str	r3, [r7, #28]
            pTemp2 =(uint32_t*) &(EXTI->EXTI_RTSR_t);
 800039e:	4b90      	ldr	r3, [pc, #576]	@ (80005e0 <GPIO_Init+0x2a4>)
 80003a0:	61bb      	str	r3, [r7, #24]
            *pTemp2 &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a2:	69bb      	ldr	r3, [r7, #24]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	7912      	ldrb	r2, [r2, #4]
 80003aa:	4611      	mov	r1, r2
 80003ac:	2201      	movs	r2, #1
 80003ae:	408a      	lsls	r2, r1
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	401a      	ands	r2, r3
 80003b4:	69bb      	ldr	r3, [r7, #24]
 80003b6:	601a      	str	r2, [r3, #0]
            *pTemp1 |=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b8:	69fb      	ldr	r3, [r7, #28]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	687a      	ldr	r2, [r7, #4]
 80003be:	7912      	ldrb	r2, [r2, #4]
 80003c0:	4611      	mov	r1, r2
 80003c2:	2201      	movs	r2, #1
 80003c4:	408a      	lsls	r2, r1
 80003c6:	431a      	orrs	r2, r3
 80003c8:	69fb      	ldr	r3, [r7, #28]
 80003ca:	601a      	str	r2, [r3, #0]
 80003cc:	e039      	b.n	8000442 <GPIO_Init+0x106>
        }

        else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT){
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	795b      	ldrb	r3, [r3, #5]
 80003d2:	2b05      	cmp	r3, #5
 80003d4:	d119      	bne.n	800040a <GPIO_Init+0xce>
            //1. configure RTSR
            pTemp1 =(uint32_t*) &(EXTI->EXTI_RTSR_t);
 80003d6:	4b82      	ldr	r3, [pc, #520]	@ (80005e0 <GPIO_Init+0x2a4>)
 80003d8:	61fb      	str	r3, [r7, #28]
            pTemp2 =(uint32_t*) &(EXTI->EXTI_FTSR_t);
 80003da:	4b80      	ldr	r3, [pc, #512]	@ (80005dc <GPIO_Init+0x2a0>)
 80003dc:	61bb      	str	r3, [r7, #24]
            *pTemp2 &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003de:	69bb      	ldr	r3, [r7, #24]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	687a      	ldr	r2, [r7, #4]
 80003e4:	7912      	ldrb	r2, [r2, #4]
 80003e6:	4611      	mov	r1, r2
 80003e8:	2201      	movs	r2, #1
 80003ea:	408a      	lsls	r2, r1
 80003ec:	43d2      	mvns	r2, r2
 80003ee:	401a      	ands	r2, r3
 80003f0:	69bb      	ldr	r3, [r7, #24]
 80003f2:	601a      	str	r2, [r3, #0]
            *pTemp1 |=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f4:	69fb      	ldr	r3, [r7, #28]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	687a      	ldr	r2, [r7, #4]
 80003fa:	7912      	ldrb	r2, [r2, #4]
 80003fc:	4611      	mov	r1, r2
 80003fe:	2201      	movs	r2, #1
 8000400:	408a      	lsls	r2, r1
 8000402:	431a      	orrs	r2, r3
 8000404:	69fb      	ldr	r3, [r7, #28]
 8000406:	601a      	str	r2, [r3, #0]
 8000408:	e01b      	b.n	8000442 <GPIO_Init+0x106>
        }

        else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT){
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	795b      	ldrb	r3, [r3, #5]
 800040e:	2b06      	cmp	r3, #6
 8000410:	d117      	bne.n	8000442 <GPIO_Init+0x106>
            //1. configure both RTSR and FTSR
            pTemp1 =(uint32_t*) &(EXTI->EXTI_RTSR_t);
 8000412:	4b73      	ldr	r3, [pc, #460]	@ (80005e0 <GPIO_Init+0x2a4>)
 8000414:	61fb      	str	r3, [r7, #28]
            pTemp2 =(uint32_t*) &(EXTI->EXTI_FTSR_t);
 8000416:	4b71      	ldr	r3, [pc, #452]	@ (80005dc <GPIO_Init+0x2a0>)
 8000418:	61bb      	str	r3, [r7, #24]
            *pTemp2 |=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800041a:	69bb      	ldr	r3, [r7, #24]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	7912      	ldrb	r2, [r2, #4]
 8000422:	4611      	mov	r1, r2
 8000424:	2201      	movs	r2, #1
 8000426:	408a      	lsls	r2, r1
 8000428:	431a      	orrs	r2, r3
 800042a:	69bb      	ldr	r3, [r7, #24]
 800042c:	601a      	str	r2, [r3, #0]
            *pTemp1 |=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042e:	69fb      	ldr	r3, [r7, #28]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	687a      	ldr	r2, [r7, #4]
 8000434:	7912      	ldrb	r2, [r2, #4]
 8000436:	4611      	mov	r1, r2
 8000438:	2201      	movs	r2, #1
 800043a:	408a      	lsls	r2, r1
 800043c:	431a      	orrs	r2, r3
 800043e:	69fb      	ldr	r3, [r7, #28]
 8000440:	601a      	str	r2, [r3, #0]

        }
        //2. configure the GPIO port selection in SYSCFG_EXTICR
        uint32_t *pTemp4;
        pTemp4 =(uint32_t*) (SYSCFG_BASEADDR+ (8+(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/4));
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	089b      	lsrs	r3, r3, #2
 8000448:	b2db      	uxtb	r3, r3
 800044a:	461a      	mov	r2, r3
 800044c:	4b65      	ldr	r3, [pc, #404]	@ (80005e4 <GPIO_Init+0x2a8>)
 800044e:	4413      	add	r3, r2
 8000450:	617b      	str	r3, [r7, #20]
        uint8_t  portcode =(uint8_t) GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	4a64      	ldr	r2, [pc, #400]	@ (80005e8 <GPIO_Init+0x2ac>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d024      	beq.n	80004a6 <GPIO_Init+0x16a>
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	4a62      	ldr	r2, [pc, #392]	@ (80005ec <GPIO_Init+0x2b0>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d01d      	beq.n	80004a2 <GPIO_Init+0x166>
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	4a61      	ldr	r2, [pc, #388]	@ (80005f0 <GPIO_Init+0x2b4>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d016      	beq.n	800049e <GPIO_Init+0x162>
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	4a5f      	ldr	r2, [pc, #380]	@ (80005f4 <GPIO_Init+0x2b8>)
 8000476:	4293      	cmp	r3, r2
 8000478:	d00f      	beq.n	800049a <GPIO_Init+0x15e>
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	4a5e      	ldr	r2, [pc, #376]	@ (80005f8 <GPIO_Init+0x2bc>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d008      	beq.n	8000496 <GPIO_Init+0x15a>
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	4a5c      	ldr	r2, [pc, #368]	@ (80005fc <GPIO_Init+0x2c0>)
 800048a:	4293      	cmp	r3, r2
 800048c:	d101      	bne.n	8000492 <GPIO_Init+0x156>
 800048e:	2307      	movs	r3, #7
 8000490:	e00a      	b.n	80004a8 <GPIO_Init+0x16c>
 8000492:	2300      	movs	r3, #0
 8000494:	e008      	b.n	80004a8 <GPIO_Init+0x16c>
 8000496:	2304      	movs	r3, #4
 8000498:	e006      	b.n	80004a8 <GPIO_Init+0x16c>
 800049a:	2303      	movs	r3, #3
 800049c:	e004      	b.n	80004a8 <GPIO_Init+0x16c>
 800049e:	2302      	movs	r3, #2
 80004a0:	e002      	b.n	80004a8 <GPIO_Init+0x16c>
 80004a2:	2301      	movs	r3, #1
 80004a4:	e000      	b.n	80004a8 <GPIO_Init+0x16c>
 80004a6:	2300      	movs	r3, #0
 80004a8:	74fb      	strb	r3, [r7, #19]
        SYSCFG_PCLK_EN();
 80004aa:	4a55      	ldr	r2, [pc, #340]	@ (8000600 <GPIO_Init+0x2c4>)
 80004ac:	f892 3045 	ldrb.w	r3, [r2, #69]	@ 0x45
 80004b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80004b4:	f882 3045 	strb.w	r3, [r2, #69]	@ 0x45
        *pTemp4 = portcode<<    (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%4;
 80004b8:	7cfa      	ldrb	r2, [r7, #19]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	791b      	ldrb	r3, [r3, #4]
 80004be:	f003 0303 	and.w	r3, r3, #3
 80004c2:	fa02 f303 	lsl.w	r3, r2, r3
 80004c6:	461a      	mov	r2, r3
 80004c8:	697b      	ldr	r3, [r7, #20]
 80004ca:	601a      	str	r2, [r3, #0]




        //3. enable the EXTI interrupt delivery using
        ptemp3      =(uint32_t*)    & (EXTI->EXTI_IMR_t);
 80004cc:	4b4d      	ldr	r3, [pc, #308]	@ (8000604 <GPIO_Init+0x2c8>)
 80004ce:	60fb      	str	r3, [r7, #12]
        *ptemp3     |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d0:	68fb      	ldr	r3, [r7, #12]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	687a      	ldr	r2, [r7, #4]
 80004d6:	7912      	ldrb	r2, [r2, #4]
 80004d8:	4611      	mov	r1, r2
 80004da:	2201      	movs	r2, #1
 80004dc:	408a      	lsls	r2, r1
 80004de:	431a      	orrs	r2, r3
 80004e0:	68fb      	ldr	r3, [r7, #12]
 80004e2:	601a      	str	r2, [r3, #0]

    }

    //2. Configure the speed
    pTemp =(uint32_t*)&(pGPIOHandle->pGPIOx->GPIOx_OSPEEDR_t);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	3308      	adds	r3, #8
 80004ea:	60bb      	str	r3, [r7, #8]
    *pTemp &=   ~((3)<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004ec:	68bb      	ldr	r3, [r7, #8]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	687a      	ldr	r2, [r7, #4]
 80004f2:	7912      	ldrb	r2, [r2, #4]
 80004f4:	0052      	lsls	r2, r2, #1
 80004f6:	2103      	movs	r1, #3
 80004f8:	fa01 f202 	lsl.w	r2, r1, r2
 80004fc:	43d2      	mvns	r2, r2
 80004fe:	401a      	ands	r2, r3
 8000500:	68bb      	ldr	r3, [r7, #8]
 8000502:	601a      	str	r2, [r3, #0]
    *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000504:	68bb      	ldr	r3, [r7, #8]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	687a      	ldr	r2, [r7, #4]
 800050a:	7992      	ldrb	r2, [r2, #6]
 800050c:	4611      	mov	r1, r2
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	0052      	lsls	r2, r2, #1
 8000514:	fa01 f202 	lsl.w	r2, r1, r2
 8000518:	431a      	orrs	r2, r3
 800051a:	68bb      	ldr	r3, [r7, #8]
 800051c:	601a      	str	r2, [r3, #0]
    
    //3. Configure the pull up/down settings

    pTemp =(uint32_t*)&(pGPIOHandle->pGPIOx->GPIOx_PUPDR_t);
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	330c      	adds	r3, #12
 8000524:	60bb      	str	r3, [r7, #8]
    *pTemp &=   ~((3)<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000526:	68bb      	ldr	r3, [r7, #8]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	687a      	ldr	r2, [r7, #4]
 800052c:	7912      	ldrb	r2, [r2, #4]
 800052e:	0052      	lsls	r2, r2, #1
 8000530:	2103      	movs	r1, #3
 8000532:	fa01 f202 	lsl.w	r2, r1, r2
 8000536:	43d2      	mvns	r2, r2
 8000538:	401a      	ands	r2, r3
 800053a:	68bb      	ldr	r3, [r7, #8]
 800053c:	601a      	str	r2, [r3, #0]
    *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800053e:	68bb      	ldr	r3, [r7, #8]
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	687a      	ldr	r2, [r7, #4]
 8000544:	79d2      	ldrb	r2, [r2, #7]
 8000546:	4611      	mov	r1, r2
 8000548:	687a      	ldr	r2, [r7, #4]
 800054a:	7912      	ldrb	r2, [r2, #4]
 800054c:	0052      	lsls	r2, r2, #1
 800054e:	fa01 f202 	lsl.w	r2, r1, r2
 8000552:	431a      	orrs	r2, r3
 8000554:	68bb      	ldr	r3, [r7, #8]
 8000556:	601a      	str	r2, [r3, #0]
    
    //4. Configure the Output type
    pTemp =(uint32_t*)&(pGPIOHandle->pGPIOx->GPIOx_OTYPER_t);
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	3304      	adds	r3, #4
 800055e:	60bb      	str	r3, [r7, #8]
    *pTemp &=   ~((1)<<((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000560:	68bb      	ldr	r3, [r7, #8]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	687a      	ldr	r2, [r7, #4]
 8000566:	7912      	ldrb	r2, [r2, #4]
 8000568:	4611      	mov	r1, r2
 800056a:	2201      	movs	r2, #1
 800056c:	408a      	lsls	r2, r1
 800056e:	43d2      	mvns	r2, r2
 8000570:	401a      	ands	r2, r3
 8000572:	68bb      	ldr	r3, [r7, #8]
 8000574:	601a      	str	r2, [r3, #0]
    *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType<<((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000576:	68bb      	ldr	r3, [r7, #8]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	687a      	ldr	r2, [r7, #4]
 800057c:	7a12      	ldrb	r2, [r2, #8]
 800057e:	4611      	mov	r1, r2
 8000580:	687a      	ldr	r2, [r7, #4]
 8000582:	7912      	ldrb	r2, [r2, #4]
 8000584:	fa01 f202 	lsl.w	r2, r1, r2
 8000588:	431a      	orrs	r2, r3
 800058a:	68bb      	ldr	r3, [r7, #8]
 800058c:	601a      	str	r2, [r3, #0]
    
    //5. configure alternate functionality mode

    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_ALTFN)
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	795b      	ldrb	r3, [r3, #5]
 8000592:	2b02      	cmp	r3, #2
 8000594:	d155      	bne.n	8000642 <GPIO_Init+0x306>
    {
        if (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber>7)
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	2b07      	cmp	r3, #7
 800059c:	d934      	bls.n	8000608 <GPIO_Init+0x2cc>
        {
            pTemp =(uint32_t*)(&(pGPIOHandle->pGPIOx->GPIOx_AFRH_t));
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	3324      	adds	r3, #36	@ 0x24
 80005a4:	60bb      	str	r3, [r7, #8]
            *pTemp &=   ~((0xf)<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80005a6:	68bb      	ldr	r3, [r7, #8]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	687a      	ldr	r2, [r7, #4]
 80005ac:	7912      	ldrb	r2, [r2, #4]
 80005ae:	0092      	lsls	r2, r2, #2
 80005b0:	210f      	movs	r1, #15
 80005b2:	fa01 f202 	lsl.w	r2, r1, r2
 80005b6:	43d2      	mvns	r2, r2
 80005b8:	401a      	ands	r2, r3
 80005ba:	68bb      	ldr	r3, [r7, #8]
 80005bc:	601a      	str	r2, [r3, #0]
            *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005be:	68bb      	ldr	r3, [r7, #8]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	687a      	ldr	r2, [r7, #4]
 80005c4:	7a52      	ldrb	r2, [r2, #9]
 80005c6:	4611      	mov	r1, r2
 80005c8:	687a      	ldr	r2, [r7, #4]
 80005ca:	7912      	ldrb	r2, [r2, #4]
 80005cc:	0092      	lsls	r2, r2, #2
 80005ce:	fa01 f202 	lsl.w	r2, r1, r2
 80005d2:	431a      	orrs	r2, r3
 80005d4:	68bb      	ldr	r3, [r7, #8]
 80005d6:	601a      	str	r2, [r3, #0]
            pTemp =(uint32_t*)(&(pGPIOHandle->pGPIOx->GPIOx_AFRL_t));
            *pTemp &=   ~((0xf)<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
            *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
        }
    } 
}
 80005d8:	e033      	b.n	8000642 <GPIO_Init+0x306>
 80005da:	bf00      	nop
 80005dc:	40013c0c 	.word	0x40013c0c
 80005e0:	40013c08 	.word	0x40013c08
 80005e4:	40013808 	.word	0x40013808
 80005e8:	40020000 	.word	0x40020000
 80005ec:	40020400 	.word	0x40020400
 80005f0:	40020800 	.word	0x40020800
 80005f4:	40020c00 	.word	0x40020c00
 80005f8:	40021000 	.word	0x40021000
 80005fc:	40021c00 	.word	0x40021c00
 8000600:	40023800 	.word	0x40023800
 8000604:	40013c00 	.word	0x40013c00
            pTemp =(uint32_t*)(&(pGPIOHandle->pGPIOx->GPIOx_AFRL_t));
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	3320      	adds	r3, #32
 800060e:	60bb      	str	r3, [r7, #8]
            *pTemp &=   ~((0xf)<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000610:	68bb      	ldr	r3, [r7, #8]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	687a      	ldr	r2, [r7, #4]
 8000616:	7912      	ldrb	r2, [r2, #4]
 8000618:	0092      	lsls	r2, r2, #2
 800061a:	210f      	movs	r1, #15
 800061c:	fa01 f202 	lsl.w	r2, r1, r2
 8000620:	43d2      	mvns	r2, r2
 8000622:	401a      	ands	r2, r3
 8000624:	68bb      	ldr	r3, [r7, #8]
 8000626:	601a      	str	r2, [r3, #0]
            *pTemp |=   pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode<<(4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000628:	68bb      	ldr	r3, [r7, #8]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	687a      	ldr	r2, [r7, #4]
 800062e:	7a52      	ldrb	r2, [r2, #9]
 8000630:	4611      	mov	r1, r2
 8000632:	687a      	ldr	r2, [r7, #4]
 8000634:	7912      	ldrb	r2, [r2, #4]
 8000636:	0092      	lsls	r2, r2, #2
 8000638:	fa01 f202 	lsl.w	r2, r1, r2
 800063c:	431a      	orrs	r2, r3
 800063e:	68bb      	ldr	r3, [r7, #8]
 8000640:	601a      	str	r2, [r3, #0]
}
 8000642:	bf00      	nop
 8000644:	3720      	adds	r7, #32
 8000646:	46bd      	mov	sp, r7
 8000648:	bd80      	pop	{r7, pc}
 800064a:	bf00      	nop

0800064c <SPI_PeriClkCtrl>:
 * @brief Enables or disables peripheral clock for a SPI port.
 * 
 * @param[in] pSPIx Pointer to the SPI port base address.
 * @param[in] EnorDi Enable (1) or Disable (0) the peripheral clock.
 */
void SPI_PeriClkCtrl(SPI_RegDef_t *pSPIx, uint8_t EnorDi){
 800064c:	b480      	push	{r7}
 800064e:	b083      	sub	sp, #12
 8000650:	af00      	add	r7, sp, #0
 8000652:	6078      	str	r0, [r7, #4]
 8000654:	460b      	mov	r3, r1
 8000656:	70fb      	strb	r3, [r7, #3]
    if(EnorDi){
 8000658:	78fb      	ldrb	r3, [r7, #3]
 800065a:	2b00      	cmp	r3, #0
 800065c:	d02f      	beq.n	80006be <SPI_PeriClkCtrl+0x72>
        if (pSPIx==SPI1)
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	4a31      	ldr	r2, [pc, #196]	@ (8000728 <SPI_PeriClkCtrl+0xdc>)
 8000662:	4293      	cmp	r3, r2
 8000664:	d107      	bne.n	8000676 <SPI_PeriClkCtrl+0x2a>
        {
            SPI1_PCLK_EN();
 8000666:	4a31      	ldr	r2, [pc, #196]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 8000668:	f892 3045 	ldrb.w	r3, [r2, #69]	@ 0x45
 800066c:	f043 0310 	orr.w	r3, r3, #16
 8000670:	f882 3045 	strb.w	r3, [r2, #69]	@ 0x45
        else if (pSPIx==SPI4)
        {
            SPI4_PCLK_DI();
        }  
    }
}
 8000674:	e052      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        else if (pSPIx==SPI2)
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	4a2d      	ldr	r2, [pc, #180]	@ (8000730 <SPI_PeriClkCtrl+0xe4>)
 800067a:	4293      	cmp	r3, r2
 800067c:	d107      	bne.n	800068e <SPI_PeriClkCtrl+0x42>
            SPI2_PCLK_EN();
 800067e:	4a2b      	ldr	r2, [pc, #172]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 8000680:	f892 3041 	ldrb.w	r3, [r2, #65]	@ 0x41
 8000684:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000688:	f882 3041 	strb.w	r3, [r2, #65]	@ 0x41
}
 800068c:	e046      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        else if (pSPIx==SPI3)
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	4a28      	ldr	r2, [pc, #160]	@ (8000734 <SPI_PeriClkCtrl+0xe8>)
 8000692:	4293      	cmp	r3, r2
 8000694:	d107      	bne.n	80006a6 <SPI_PeriClkCtrl+0x5a>
            SPI3_PCLK_EN();
 8000696:	4a25      	ldr	r2, [pc, #148]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 8000698:	f892 3041 	ldrb.w	r3, [r2, #65]	@ 0x41
 800069c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80006a0:	f882 3041 	strb.w	r3, [r2, #65]	@ 0x41
}
 80006a4:	e03a      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        else if (pSPIx==SPI4)
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	4a23      	ldr	r2, [pc, #140]	@ (8000738 <SPI_PeriClkCtrl+0xec>)
 80006aa:	4293      	cmp	r3, r2
 80006ac:	d136      	bne.n	800071c <SPI_PeriClkCtrl+0xd0>
            SPI4_PCLK_EN();
 80006ae:	4a1f      	ldr	r2, [pc, #124]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 80006b0:	f892 3045 	ldrb.w	r3, [r2, #69]	@ 0x45
 80006b4:	f043 0320 	orr.w	r3, r3, #32
 80006b8:	f882 3045 	strb.w	r3, [r2, #69]	@ 0x45
}
 80006bc:	e02e      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        if (pSPIx==SPI1)
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	4a19      	ldr	r2, [pc, #100]	@ (8000728 <SPI_PeriClkCtrl+0xdc>)
 80006c2:	4293      	cmp	r3, r2
 80006c4:	d107      	bne.n	80006d6 <SPI_PeriClkCtrl+0x8a>
            SPI1_PCLK_DI();
 80006c6:	4a19      	ldr	r2, [pc, #100]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 80006c8:	f892 3045 	ldrb.w	r3, [r2, #69]	@ 0x45
 80006cc:	f36f 1304 	bfc	r3, #4, #1
 80006d0:	f882 3045 	strb.w	r3, [r2, #69]	@ 0x45
}
 80006d4:	e022      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        else if (pSPIx==SPI2)
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	4a15      	ldr	r2, [pc, #84]	@ (8000730 <SPI_PeriClkCtrl+0xe4>)
 80006da:	4293      	cmp	r3, r2
 80006dc:	d107      	bne.n	80006ee <SPI_PeriClkCtrl+0xa2>
            SPI2_PCLK_DI();
 80006de:	4a13      	ldr	r2, [pc, #76]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 80006e0:	f892 3041 	ldrb.w	r3, [r2, #65]	@ 0x41
 80006e4:	f36f 1386 	bfc	r3, #6, #1
 80006e8:	f882 3041 	strb.w	r3, [r2, #65]	@ 0x41
}
 80006ec:	e016      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        else if (pSPIx==SPI3)
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	4a10      	ldr	r2, [pc, #64]	@ (8000734 <SPI_PeriClkCtrl+0xe8>)
 80006f2:	4293      	cmp	r3, r2
 80006f4:	d107      	bne.n	8000706 <SPI_PeriClkCtrl+0xba>
            SPI3_PCLK_DI();
 80006f6:	4a0d      	ldr	r2, [pc, #52]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 80006f8:	f892 3041 	ldrb.w	r3, [r2, #65]	@ 0x41
 80006fc:	f36f 13c7 	bfc	r3, #7, #1
 8000700:	f882 3041 	strb.w	r3, [r2, #65]	@ 0x41
}
 8000704:	e00a      	b.n	800071c <SPI_PeriClkCtrl+0xd0>
        else if (pSPIx==SPI4)
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	4a0b      	ldr	r2, [pc, #44]	@ (8000738 <SPI_PeriClkCtrl+0xec>)
 800070a:	4293      	cmp	r3, r2
 800070c:	d106      	bne.n	800071c <SPI_PeriClkCtrl+0xd0>
            SPI4_PCLK_DI();
 800070e:	4a07      	ldr	r2, [pc, #28]	@ (800072c <SPI_PeriClkCtrl+0xe0>)
 8000710:	f892 3045 	ldrb.w	r3, [r2, #69]	@ 0x45
 8000714:	f36f 1345 	bfc	r3, #5, #1
 8000718:	f882 3045 	strb.w	r3, [r2, #69]	@ 0x45
}
 800071c:	bf00      	nop
 800071e:	370c      	adds	r7, #12
 8000720:	46bd      	mov	sp, r7
 8000722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000726:	4770      	bx	lr
 8000728:	40013000 	.word	0x40013000
 800072c:	40023800 	.word	0x40023800
 8000730:	40003800 	.word	0x40003800
 8000734:	40003c00 	.word	0x40003c00
 8000738:	40013400 	.word	0x40013400

0800073c <SPI_Init>:
/**
 * @brief Initializes the SPI port.
 * 
 * @param[in] pSPIHandle Pointer to the SPI handle structure.
 */
void SPI_Init(SPI_Handle_t *pSPIHandle){
 800073c:	b580      	push	{r7, lr}
 800073e:	b084      	sub	sp, #16
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]

    SPI_PeriClkCtrl(pSPIHandle->pSPIx,ENABLE);
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	2101      	movs	r1, #1
 800074a:	4618      	mov	r0, r3
 800074c:	f7ff ff7e 	bl	800064c <SPI_PeriClkCtrl>

    uint32_t *pTemp;
    pTemp =(uint32_t*) &(pSPIHandle->pSPIx->SPI_CR1_t);
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	60fb      	str	r3, [r7, #12]
    *pTemp = 0;
 8000756:	68fb      	ldr	r3, [r7, #12]
 8000758:	2200      	movs	r2, #0
 800075a:	601a      	str	r2, [r3, #0]

    //0.    configure ssm
    pSPIHandle->pSPIx->SPI_CR1_t.SSM=pSPIHandle->SPI_Config.SPI_SSM;
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	7a99      	ldrb	r1, [r3, #10]
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	681a      	ldr	r2, [r3, #0]
 8000764:	460b      	mov	r3, r1
 8000766:	f003 0301 	and.w	r3, r3, #1
 800076a:	b2d9      	uxtb	r1, r3
 800076c:	8813      	ldrh	r3, [r2, #0]
 800076e:	f361 2349 	bfi	r3, r1, #9, #1
 8000772:	8013      	strh	r3, [r2, #0]

    //1. configure the SPI device mode
    pSPIHandle->pSPIx->SPI_CR1_t.MSTR=(pSPIHandle->SPI_Config.SPI_DeviceMode);
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	7919      	ldrb	r1, [r3, #4]
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	681a      	ldr	r2, [r3, #0]
 800077c:	460b      	mov	r3, r1
 800077e:	f003 0301 	and.w	r3, r3, #1
 8000782:	b2d9      	uxtb	r1, r3
 8000784:	8813      	ldrh	r3, [r2, #0]
 8000786:	f361 0382 	bfi	r3, r1, #2, #1
 800078a:	8013      	strh	r3, [r2, #0]


    //2. configure the SPI bus config
    if (pSPIHandle->SPI_Config.SPI_BusConfig==SPI_BUS_CONFIG_FD)
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	795b      	ldrb	r3, [r3, #5]
 8000790:	2b01      	cmp	r3, #1
 8000792:	d106      	bne.n	80007a2 <SPI_Init+0x66>
    {
        //bidi mode should be cleared 
        pSPIHandle->pSPIx->SPI_CR1_t.BIDIMODE=0;
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	681a      	ldr	r2, [r3, #0]
 8000798:	8813      	ldrh	r3, [r2, #0]
 800079a:	f36f 33cf 	bfc	r3, #15, #1
 800079e:	8013      	strh	r3, [r2, #0]
 80007a0:	e01a      	b.n	80007d8 <SPI_Init+0x9c>
    }
    else if (pSPIHandle->SPI_Config.SPI_BusConfig==SPI_BUS_CONFIG_HD)
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	795b      	ldrb	r3, [r3, #5]
 80007a6:	2b02      	cmp	r3, #2
 80007a8:	d106      	bne.n	80007b8 <SPI_Init+0x7c>
    {
        //bidi mode should be set 
        pSPIHandle->pSPIx->SPI_CR1_t.BIDIMODE=1;
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	681a      	ldr	r2, [r3, #0]
 80007ae:	8813      	ldrh	r3, [r2, #0]
 80007b0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80007b4:	8013      	strh	r3, [r2, #0]
 80007b6:	e00f      	b.n	80007d8 <SPI_Init+0x9c>
    }
    else if (pSPIHandle->SPI_Config.SPI_BusConfig==SPI_BUS_CONFIG_SX_RX)
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	795b      	ldrb	r3, [r3, #5]
 80007bc:	2b03      	cmp	r3, #3
 80007be:	d10b      	bne.n	80007d8 <SPI_Init+0x9c>
    {
        //bidi mode should be cleared
        //RXONLY should be set
        pSPIHandle->pSPIx->SPI_CR1_t.BIDIMODE=0;
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	681a      	ldr	r2, [r3, #0]
 80007c4:	8813      	ldrh	r3, [r2, #0]
 80007c6:	f36f 33cf 	bfc	r3, #15, #1
 80007ca:	8013      	strh	r3, [r2, #0]
        pSPIHandle->pSPIx->SPI_CR1_t.RXONLY=1;
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681a      	ldr	r2, [r3, #0]
 80007d0:	8813      	ldrh	r3, [r2, #0]
 80007d2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80007d6:	8013      	strh	r3, [r2, #0]
    }
    
    //3. configure the SPI clock speed
    pSPIHandle->pSPIx->SPI_CR1_t.BR=pSPIHandle->SPI_Config.SPI_SclkSpeed;
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	7999      	ldrb	r1, [r3, #6]
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	681a      	ldr	r2, [r3, #0]
 80007e0:	460b      	mov	r3, r1
 80007e2:	f003 0307 	and.w	r3, r3, #7
 80007e6:	b2d9      	uxtb	r1, r3
 80007e8:	8813      	ldrh	r3, [r2, #0]
 80007ea:	f361 03c5 	bfi	r3, r1, #3, #3
 80007ee:	8013      	strh	r3, [r2, #0]

    //4. configure the Data Rate Format
    pSPIHandle->pSPIx->SPI_CR1_t.DFF=pSPIHandle->SPI_Config.SPI_DFF;
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	79d9      	ldrb	r1, [r3, #7]
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681a      	ldr	r2, [r3, #0]
 80007f8:	460b      	mov	r3, r1
 80007fa:	f003 0301 	and.w	r3, r3, #1
 80007fe:	b2d9      	uxtb	r1, r3
 8000800:	8813      	ldrh	r3, [r2, #0]
 8000802:	f361 23cb 	bfi	r3, r1, #11, #1
 8000806:	8013      	strh	r3, [r2, #0]

    //5. configure the CPOL
    pSPIHandle->pSPIx->SPI_CR1_t.CPOL=pSPIHandle->SPI_Config.SPI_CPOL;
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	7a19      	ldrb	r1, [r3, #8]
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	681a      	ldr	r2, [r3, #0]
 8000810:	460b      	mov	r3, r1
 8000812:	f003 0301 	and.w	r3, r3, #1
 8000816:	b2d9      	uxtb	r1, r3
 8000818:	8813      	ldrh	r3, [r2, #0]
 800081a:	f361 0341 	bfi	r3, r1, #1, #1
 800081e:	8013      	strh	r3, [r2, #0]

    //6. configure the CPHA
    pSPIHandle->pSPIx->SPI_CR1_t.CPHA=pSPIHandle->SPI_Config.SPI_CPHA;
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	7a59      	ldrb	r1, [r3, #9]
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	681a      	ldr	r2, [r3, #0]
 8000828:	460b      	mov	r3, r1
 800082a:	f003 0301 	and.w	r3, r3, #1
 800082e:	b2d9      	uxtb	r1, r3
 8000830:	8813      	ldrh	r3, [r2, #0]
 8000832:	f361 0300 	bfi	r3, r1, #0, #1
 8000836:	8013      	strh	r3, [r2, #0]

    //7. configure the ssi
    if(pSPIHandle->SPI_Config.SPI_SSM){
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	7a9b      	ldrb	r3, [r3, #10]
 800083c:	2b00      	cmp	r3, #0
 800083e:	d00b      	beq.n	8000858 <SPI_Init+0x11c>
        pSPIHandle->pSPIx->SPI_CR1_t.SSI=pSPIHandle->SPI_Config.SPI_SSI;
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	7ad9      	ldrb	r1, [r3, #11]
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	681a      	ldr	r2, [r3, #0]
 8000848:	460b      	mov	r3, r1
 800084a:	f003 0301 	and.w	r3, r3, #1
 800084e:	b2d9      	uxtb	r1, r3
 8000850:	8813      	ldrh	r3, [r2, #0]
 8000852:	f361 2308 	bfi	r3, r1, #8, #1
 8000856:	8013      	strh	r3, [r2, #0]
    }
    
    //8.    Enable SPI by setting the SPE bit
    pSPIHandle->pSPIx->SPI_CR1_t.SPE=1;
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	681a      	ldr	r2, [r3, #0]
 800085c:	8813      	ldrh	r3, [r2, #0]
 800085e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000862:	8013      	strh	r3, [r2, #0]
    
}
 8000864:	bf00      	nop
 8000866:	3710      	adds	r7, #16
 8000868:	46bd      	mov	sp, r7
 800086a:	bd80      	pop	{r7, pc}

0800086c <SPI_SendData>:
 * 
 * @return None
 *  *
 * @Note  This is blocking call
 */
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t Len){
 800086c:	b480      	push	{r7}
 800086e:	b085      	sub	sp, #20
 8000870:	af00      	add	r7, sp, #0
 8000872:	60f8      	str	r0, [r7, #12]
 8000874:	60b9      	str	r1, [r7, #8]
 8000876:	607a      	str	r2, [r7, #4]


    while(Len){
 8000878:	e02c      	b.n	80008d4 <SPI_SendData+0x68>
        while(1){
            if ((pSPIx->SPI_SR_t.TXE))
 800087a:	68fb      	ldr	r3, [r7, #12]
 800087c:	891b      	ldrh	r3, [r3, #8]
 800087e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8000882:	b2db      	uxtb	r3, r3
 8000884:	2b00      	cmp	r3, #0
 8000886:	d100      	bne.n	800088a <SPI_SendData+0x1e>
 8000888:	e7f7      	b.n	800087a <SPI_SendData+0xe>
                {
                break;
 800088a:	bf00      	nop
                } 
        }
        if (!(pSPIx->SPI_CR1_t.DFF))
 800088c:	68fb      	ldr	r3, [r7, #12]
 800088e:	881b      	ldrh	r3, [r3, #0]
 8000890:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 8000894:	b2db      	uxtb	r3, r3
 8000896:	2b00      	cmp	r3, #0
 8000898:	d10b      	bne.n	80008b2 <SPI_SendData+0x46>
        {
            pSPIx->SPI_DR_t.DR=*pTxBuffer;
 800089a:	68bb      	ldr	r3, [r7, #8]
 800089c:	781b      	ldrb	r3, [r3, #0]
 800089e:	461a      	mov	r2, r3
 80008a0:	68fb      	ldr	r3, [r7, #12]
 80008a2:	819a      	strh	r2, [r3, #12]
            Len--;
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	3b01      	subs	r3, #1
 80008a8:	607b      	str	r3, [r7, #4]
            pTxBuffer++;
 80008aa:	68bb      	ldr	r3, [r7, #8]
 80008ac:	3301      	adds	r3, #1
 80008ae:	60bb      	str	r3, [r7, #8]
 80008b0:	e010      	b.n	80008d4 <SPI_SendData+0x68>
        }
        else if(pSPIx->SPI_CR1_t.DFF){
 80008b2:	68fb      	ldr	r3, [r7, #12]
 80008b4:	881b      	ldrh	r3, [r3, #0]
 80008b6:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 80008ba:	b2db      	uxtb	r3, r3
 80008bc:	2b00      	cmp	r3, #0
 80008be:	d009      	beq.n	80008d4 <SPI_SendData+0x68>
            pSPIx->SPI_DR_t.DR=*(uint16_t*)pTxBuffer;
 80008c0:	68bb      	ldr	r3, [r7, #8]
 80008c2:	881a      	ldrh	r2, [r3, #0]
 80008c4:	68fb      	ldr	r3, [r7, #12]
 80008c6:	819a      	strh	r2, [r3, #12]
            Len-=2;
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	3b02      	subs	r3, #2
 80008cc:	607b      	str	r3, [r7, #4]
            (uint16_t*)pTxBuffer++;
 80008ce:	68bb      	ldr	r3, [r7, #8]
 80008d0:	3301      	adds	r3, #1
 80008d2:	60bb      	str	r3, [r7, #8]
    while(Len){
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	2b00      	cmp	r3, #0
 80008d8:	d1cf      	bne.n	800087a <SPI_SendData+0xe>
        }
    }
}
 80008da:	bf00      	nop
 80008dc:	bf00      	nop
 80008de:	3714      	adds	r7, #20
 80008e0:	46bd      	mov	sp, r7
 80008e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e6:	4770      	bx	lr

080008e8 <main>:

void SPI3_GPIOInits(void);
void SPI3_Inits(void);

int main(void)
{
 80008e8:	b580      	push	{r7, lr}
 80008ea:	b084      	sub	sp, #16
 80008ec:	af00      	add	r7, sp, #0
    char user_data[] = "hello world"; 
 80008ee:	4a13      	ldr	r2, [pc, #76]	@ (800093c <main+0x54>)
 80008f0:	1d3b      	adds	r3, r7, #4
 80008f2:	ca07      	ldmia	r2, {r0, r1, r2}
 80008f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    GPIOB_PCLK_EN();
 80008f8:	4a11      	ldr	r2, [pc, #68]	@ (8000940 <main+0x58>)
 80008fa:	f892 3030 	ldrb.w	r3, [r2, #48]	@ 0x30
 80008fe:	f043 0302 	orr.w	r3, r3, #2
 8000902:	f882 3030 	strb.w	r3, [r2, #48]	@ 0x30
    SPI3_PCLK_EN();
 8000906:	4a0e      	ldr	r2, [pc, #56]	@ (8000940 <main+0x58>)
 8000908:	f892 3041 	ldrb.w	r3, [r2, #65]	@ 0x41
 800090c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000910:	f882 3041 	strb.w	r3, [r2, #65]	@ 0x41

    SPI3_GPIOInits();
 8000914:	f000 f818 	bl	8000948 <SPI3_GPIOInits>
    SPI3_Inits();
 8000918:	f000 f838 	bl	800098c <SPI3_Inits>


    SPI_SendData(SPI3, (uint8_t*)user_data, strlen(user_data));
 800091c:	1d3b      	adds	r3, r7, #4
 800091e:	4618      	mov	r0, r3
 8000920:	f7ff fc58 	bl	80001d4 <strlen>
 8000924:	4602      	mov	r2, r0
 8000926:	1d3b      	adds	r3, r7, #4
 8000928:	4619      	mov	r1, r3
 800092a:	4806      	ldr	r0, [pc, #24]	@ (8000944 <main+0x5c>)
 800092c:	f7ff ff9e 	bl	800086c <SPI_SendData>




    
    return 0;
 8000930:	2300      	movs	r3, #0
}
 8000932:	4618      	mov	r0, r3
 8000934:	3710      	adds	r7, #16
 8000936:	46bd      	mov	sp, r7
 8000938:	bd80      	pop	{r7, pc}
 800093a:	bf00      	nop
 800093c:	08000a80 	.word	0x08000a80
 8000940:	40023800 	.word	0x40023800
 8000944:	40003c00 	.word	0x40003c00

08000948 <SPI3_GPIOInits>:





void SPI3_GPIOInits(void){
 8000948:	b580      	push	{r7, lr}
 800094a:	b084      	sub	sp, #16
 800094c:	af00      	add	r7, sp, #0
    GPIO_Handle_t   SPI_Pins;

    SPI_Pins.pGPIOx = GPIOB;
 800094e:	4b0e      	ldr	r3, [pc, #56]	@ (8000988 <SPI3_GPIOInits+0x40>)
 8000950:	607b      	str	r3, [r7, #4]

    SPI_Pins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000952:	2302      	movs	r3, #2
 8000954:	727b      	strb	r3, [r7, #9]
    SPI_Pins.GPIO_PinConfig.GPIO_PinAltFunMode=6;
 8000956:	2306      	movs	r3, #6
 8000958:	737b      	strb	r3, [r7, #13]
    SPI_Pins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800095a:	2300      	movs	r3, #0
 800095c:	733b      	strb	r3, [r7, #12]
    SPI_Pins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800095e:	2300      	movs	r3, #0
 8000960:	72fb      	strb	r3, [r7, #11]
    SPI_Pins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000962:	2302      	movs	r3, #2
 8000964:	72bb      	strb	r3, [r7, #10]

    //mosi
    SPI_Pins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_5;
 8000966:	2305      	movs	r3, #5
 8000968:	723b      	strb	r3, [r7, #8]
    GPIO_Init(&SPI_Pins);
 800096a:	1d3b      	adds	r3, r7, #4
 800096c:	4618      	mov	r0, r3
 800096e:	f7ff fce5 	bl	800033c <GPIO_Init>
    //miso
    //SPI_Pins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_14;
    //GPIO_Init(&SPI_Pins);

    //clk
    SPI_Pins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_3;
 8000972:	2303      	movs	r3, #3
 8000974:	723b      	strb	r3, [r7, #8]
    GPIO_Init(&SPI_Pins);
 8000976:	1d3b      	adds	r3, r7, #4
 8000978:	4618      	mov	r0, r3
 800097a:	f7ff fcdf 	bl	800033c <GPIO_Init>

    //nss
    //SPI_Pins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_12;
    //GPIO_Init(&SPI_Pins);

}
 800097e:	bf00      	nop
 8000980:	3710      	adds	r7, #16
 8000982:	46bd      	mov	sp, r7
 8000984:	bd80      	pop	{r7, pc}
 8000986:	bf00      	nop
 8000988:	40020400 	.word	0x40020400

0800098c <SPI3_Inits>:



void SPI3_Inits(void){
 800098c:	b580      	push	{r7, lr}
 800098e:	b084      	sub	sp, #16
 8000990:	af00      	add	r7, sp, #0
    SPI_Handle_t SPI3Handle;

    SPI3Handle.pSPIx=SPI3;
 8000992:	4b0d      	ldr	r3, [pc, #52]	@ (80009c8 <SPI3_Inits+0x3c>)
 8000994:	607b      	str	r3, [r7, #4]
    SPI3Handle.SPI_Config.SPI_SSM=SPI_SSM_EN;
 8000996:	2301      	movs	r3, #1
 8000998:	73bb      	strb	r3, [r7, #14]
    SPI3Handle.SPI_Config.SPI_SSI=SPI_SSI_MASTER;
 800099a:	2301      	movs	r3, #1
 800099c:	73fb      	strb	r3, [r7, #15]
    SPI3Handle.SPI_Config.SPI_BusConfig= SPI_BUS_CONFIG_FD;
 800099e:	2301      	movs	r3, #1
 80009a0:	727b      	strb	r3, [r7, #9]
    SPI3Handle.SPI_Config.SPI_CPHA=SPI_CPHA_HIGH;
 80009a2:	2301      	movs	r3, #1
 80009a4:	737b      	strb	r3, [r7, #13]
    SPI3Handle.SPI_Config.SPI_CPOL=SPI_CPOL_LOW;
 80009a6:	2300      	movs	r3, #0
 80009a8:	733b      	strb	r3, [r7, #12]
    SPI3Handle.SPI_Config.SPI_DeviceMode=SPI_DEVICE_MODE_MASTER;
 80009aa:	2301      	movs	r3, #1
 80009ac:	723b      	strb	r3, [r7, #8]
    SPI3Handle.SPI_Config.SPI_SclkSpeed=SPI_SCLK_DIV128;
 80009ae:	2306      	movs	r3, #6
 80009b0:	72bb      	strb	r3, [r7, #10]
    SPI3Handle.SPI_Config.SPI_DFF=SPI_DFF_16;
 80009b2:	2301      	movs	r3, #1
 80009b4:	72fb      	strb	r3, [r7, #11]

    

    

    SPI_Init(&SPI3Handle);
 80009b6:	1d3b      	adds	r3, r7, #4
 80009b8:	4618      	mov	r0, r3
 80009ba:	f7ff febf 	bl	800073c <SPI_Init>
}
 80009be:	bf00      	nop
 80009c0:	3710      	adds	r7, #16
 80009c2:	46bd      	mov	sp, r7
 80009c4:	bd80      	pop	{r7, pc}
 80009c6:	bf00      	nop
 80009c8:	40003c00 	.word	0x40003c00

080009cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80009cc:	480d      	ldr	r0, [pc, #52]	@ (8000a04 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80009ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80009d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80009d4:	480c      	ldr	r0, [pc, #48]	@ (8000a08 <LoopForever+0x6>)
  ldr r1, =_edata
 80009d6:	490d      	ldr	r1, [pc, #52]	@ (8000a0c <LoopForever+0xa>)
  ldr r2, =_sidata
 80009d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000a10 <LoopForever+0xe>)
  movs r3, #0
 80009da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009dc:	e002      	b.n	80009e4 <LoopCopyDataInit>

080009de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009e2:	3304      	adds	r3, #4

080009e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009e8:	d3f9      	bcc.n	80009de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009ea:	4a0a      	ldr	r2, [pc, #40]	@ (8000a14 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000a18 <LoopForever+0x16>)
  movs r3, #0
 80009ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009f0:	e001      	b.n	80009f6 <LoopFillZerobss>

080009f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009f4:	3204      	adds	r2, #4

080009f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009f8:	d3fb      	bcc.n	80009f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009fa:	f000 f811 	bl	8000a20 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009fe:	f7ff ff73 	bl	80008e8 <main>

08000a02 <LoopForever>:

LoopForever:
  b LoopForever
 8000a02:	e7fe      	b.n	8000a02 <LoopForever>
  ldr   r0, =_estack
 8000a04:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000a08:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a0c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000a10:	08000a9c 	.word	0x08000a9c
  ldr r2, =_sbss
 8000a14:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000a18:	2000001c 	.word	0x2000001c

08000a1c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a1c:	e7fe      	b.n	8000a1c <ADC_IRQHandler>
	...

08000a20 <__libc_init_array>:
 8000a20:	b570      	push	{r4, r5, r6, lr}
 8000a22:	4d0d      	ldr	r5, [pc, #52]	@ (8000a58 <__libc_init_array+0x38>)
 8000a24:	4c0d      	ldr	r4, [pc, #52]	@ (8000a5c <__libc_init_array+0x3c>)
 8000a26:	1b64      	subs	r4, r4, r5
 8000a28:	10a4      	asrs	r4, r4, #2
 8000a2a:	2600      	movs	r6, #0
 8000a2c:	42a6      	cmp	r6, r4
 8000a2e:	d109      	bne.n	8000a44 <__libc_init_array+0x24>
 8000a30:	4d0b      	ldr	r5, [pc, #44]	@ (8000a60 <__libc_init_array+0x40>)
 8000a32:	4c0c      	ldr	r4, [pc, #48]	@ (8000a64 <__libc_init_array+0x44>)
 8000a34:	f000 f818 	bl	8000a68 <_init>
 8000a38:	1b64      	subs	r4, r4, r5
 8000a3a:	10a4      	asrs	r4, r4, #2
 8000a3c:	2600      	movs	r6, #0
 8000a3e:	42a6      	cmp	r6, r4
 8000a40:	d105      	bne.n	8000a4e <__libc_init_array+0x2e>
 8000a42:	bd70      	pop	{r4, r5, r6, pc}
 8000a44:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a48:	4798      	blx	r3
 8000a4a:	3601      	adds	r6, #1
 8000a4c:	e7ee      	b.n	8000a2c <__libc_init_array+0xc>
 8000a4e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a52:	4798      	blx	r3
 8000a54:	3601      	adds	r6, #1
 8000a56:	e7f2      	b.n	8000a3e <__libc_init_array+0x1e>
 8000a58:	08000a94 	.word	0x08000a94
 8000a5c:	08000a94 	.word	0x08000a94
 8000a60:	08000a94 	.word	0x08000a94
 8000a64:	08000a98 	.word	0x08000a98

08000a68 <_init>:
 8000a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a6a:	bf00      	nop
 8000a6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a6e:	bc08      	pop	{r3}
 8000a70:	469e      	mov	lr, r3
 8000a72:	4770      	bx	lr

08000a74 <_fini>:
 8000a74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a76:	bf00      	nop
 8000a78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a7a:	bc08      	pop	{r3}
 8000a7c:	469e      	mov	lr, r3
 8000a7e:	4770      	bx	lr
